SQL> @install
DEFINE _DATE           = "27-AUG-20" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "" (CHAR)
DEFINE _USER           = "" (CHAR)
DEFINE _PRIVILEGE      = "" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1202000100" (CHAR)
DEFINE _EDITOR         = "Notepad" (CHAR)
DEFINE APP             = "CAR_SELL" (CHAR)
DEFINE SAPP            = "CAR_SELL_OWNER" (CHAR)
DEFINE SUSR            = "CAR_SELL_USER" (CHAR)
DEFINE PW_SUSR         = "Start*123s" (CHAR)
DEFINE PW_SAPP         = "Start*123s" (CHAR)
DEFINE CADM            = "/ as sysdba" (CHAR)
DEFINE CSUSR           = "CAR_SELL_USER/Start*123s" (CHAR)
DEFINE CSAPP           = "CAR_SELL_OWNER/Start*123s" (CHAR)
DEFINE ROLE_RW         = "CAR_SELL_OWNER_RW" (CHAR)
DEFINE ROLE_RO         = "CAR_SELL_OWNER_RO" (CHAR)
DEFINE ROLE_CONNECT    = "CAR_SELL_CONNECT" (CHAR)
DEFINE ROLE_RESOURCE   = "CAR_SELL_RESOURCE" (CHAR)
DEFINE PROFILE_TECH    = "CAR_SELL_DEFAULT" (CHAR)
DEFINE PWD_VERIFY_FUNC = "CAR_SELL_VERIFY_FUNC" (CHAR)
DEFINE TBS_DEFAULT     = "USERS" (CHAR)
DEFINE TBS_TEMP        = "TEMP" (CHAR)

wait until Script is finished and the logs are not increasing in size
SQL> SET VERIFY ON
SQL> CONNECT &&csapp
Connected.
SQL> alter session set nls_length_semantics='CHAR';

Session altered.

SQL> 
SQL> -- -------------------------------
SQL> prompt create tables staging area
create tables staging area
SQL> -- -------------------------------
SQL> 
SQL> @ddl/crtb/crtb_ANNOUNCEMENT_VEHICLE.sql
SQL> prompt executing script crtb_ANNOUNCEMENT_VEHICLE.sql in schema &&sapp
executing script crtb_ANNOUNCEMENT_VEHICLE.sql in schema CAR_SELL_OWNER
SQL> 
SQL> CREATE TABLE &&sapp..ANNOUNCEMENT_VEHICLE(
  2    ID NUMBER (15) NOT NULL,
  3    MAIN_CATEGORY_ID NUMBER(15) NOT NULL,
  4    BRAND VARCHAR2 (1000 CHAR) NOT NULL,
  5    MODEL VARCHAR2 (1000 CHAR) NOT NULL,
  6    ENGINE_TYPE  VARCHAR2 (1000 CHAR),
  7    CONDITION_TYPE VARCHAR2 (1000 CHAR),
  8    HORSE_POWER NUMBER (10),
  9    EMISSION_STANDART_TYPE VARCHAR2 (1000 CHAR),
 10    GEARBOX_TYPE VARCHAR2 (1000 CHAR),
 11    SUB_CATEGORY_ID	NUMBER (15) NOT NULL,
 12    COOLING_TYPE VARCHAR2 (1000 CHAR),
 13    NUMBER_OF_AXELS NUMBER (10),
 14    NUMBER_OF_SEATS NUMBER (10),
 15    WEIGHT_CAPACITY NUMBER (10),
 16    PRICE NUMBER (10) NOT NULL,
 17    CURRENCY VARCHAR2 (10 CHAR) NOT NULL,
 18    DATE_OF_MANUFACTURE DATE NOT NULL,
 19    MILEAGE NUMBER (10),
 20    COLOR VARCHAR2 (1000 CHAR),
 21    REGION VARCHAR2 (1000 CHAR) NOT NULL,
 22    CITY VARCHAR2 (1000 CHAR) NOT NULL,
 23    VALID_DAYS NUMBER(10) NOT NULL,
 24    CUBATURE NUMBER (10),
 25    ENGINE_CATEGORY_TYPE NUMBER (1),
 26    VALID_FROM DATE NOT NULL,
 27    VALID_TO DATE NOT NULL,
 28    TOTAL_WEIGHT NUMBER(10),
 29    WORKING_VOLUME NUMBER(10),
 30    HOURS_OF_OPERATION NUMBER(10),
 31    NUMBER_OF_BEDS NUMBER(2),
 32    TOILET_TYPE VARCHAR (1000),
 33    HEATING_TYPE VARCHAR (1000),
 34    AIR_CONDITION_TYPE VARCHAR (1000),
 35    LENGTH_SIZE NUMBER(10),
 36    MATERIAL_TYPE VARCHAR (1000),
 37    WIDTH NUMBER(10),
 38    BICYCLE_SIZE NUMBER(10),
 39    NUMBER_OF_GEARS NUMBER(5),
 40    DESCRIPTION VARCHAR2 (2000 CHAR),
 41    CREATED_ON DATE NOT NULL,
 42    CREATED_BY VARCHAR2(60 CHAR) NOT NULL,
 43    DELETE_FLAG CHAR(1) NOT NULL,
 44    MODIFIED_BY VARCHAR2(60 CHAR),
 45    MODIFIED_ON DATE,
 46    DELETE_BY VARCHAR2(60 CHAR)
 47  )
 48  LOGGING;
old   1: CREATE TABLE &&sapp..ANNOUNCEMENT_VEHICLE(
new   1: CREATE TABLE CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE(

Table created.

SQL> @ddl/crtb/crtb_ENUM_ITEM_BASES.sql
SQL> prompt executing script crtb_ENUM_ITEM_BASES.sql in schema &&sapp
executing script crtb_ENUM_ITEM_BASES.sql in schema CAR_SELL_OWNER
SQL> 
SQL> CREATE TABLE &&sapp..ENUM_ITEM_BASES(
  2    ID NUMBER (15) NOT NULL,
  3    NAME VARCHAR2(60 CHAR) NOT NULL,
  4    DISCRIMINATOR VARCHAR2(60 CHAR) NOT NULL
  5  )
  6  LOGGING;
old   1: CREATE TABLE &&sapp..ENUM_ITEM_BASES(
new   1: CREATE TABLE CAR_SELL_OWNER.ENUM_ITEM_BASES(

Table created.

SQL> @ddl/crtb/crtb_MAIN_CATEGORIES.sql
SQL> prompt executing script crtb_MAIN_CATEGORIES.sql in schema &&sapp
executing script crtb_MAIN_CATEGORIES.sql in schema CAR_SELL_OWNER
SQL> 
SQL> CREATE TABLE &&sapp..MAIN_CATEGORIES(
  2    ID NUMBER (15) NOT NULL,
  3    NAME VARCHAR2(60 CHAR) NOT NULL
  4  )
  5  LOGGING;
old   1: CREATE TABLE &&sapp..MAIN_CATEGORIES(
new   1: CREATE TABLE CAR_SELL_OWNER.MAIN_CATEGORIES(

Table created.

SQL> @ddl/crtb/crtb_SUB_CATEGORIES.sql
SQL> prompt executing script crtb_SUB_CATEGORIES.sql in schema &&sapp
executing script crtb_SUB_CATEGORIES.sql in schema CAR_SELL_OWNER
SQL> 
SQL> CREATE TABLE &&sapp..SUB_CATEGORIES(
  2  ID NUMBER (15) NOT NULL,
  3  NAME VARCHAR2(60 CHAR) NOT NULL,
  4  MAIN_CATEGORY_ID NUMBER(15) NOT NULL
  5  );
old   1: CREATE TABLE &&sapp..SUB_CATEGORIES(
new   1: CREATE TABLE CAR_SELL_OWNER.SUB_CATEGORIES(

Table created.

SQL> 
SQL> -- -----------------------------------------------
SQL> prompt create primary keys for tables staging area
create primary keys for tables staging area
SQL> -- -----------------------------------------------
SQL> 
SQL> @ddl/crpk/crpk_ANNOUNCEMENT_VEHICLE_PK.sql
SQL> prompt creating PK for ANNOUNCEMENT_VEHICLE
creating PK for ANNOUNCEMENT_VEHICLE
SQL> 
SQL> ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT "ANNOUNCEMENT_VEHICLE_PK" PRIMARY KEY ("ID") ENABLE;
old   1: ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT "ANNOUNCEMENT_VEHICLE_PK" PRIMARY KEY ("ID") ENABLE
new   1: ALTER TABLE CAR_SELL_OWNER."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT "ANNOUNCEMENT_VEHICLE_PK" PRIMARY KEY ("ID") ENABLE

Table altered.

SQL> @ddl/crpk/crpk_ENUM_ITEM_BASES_PK.sql
SQL> prompt creating PK for ENUM_ITEM_BASES
creating PK for ENUM_ITEM_BASES
SQL> 
SQL> ALTER TABLE &&sapp.."ENUM_ITEM_BASES" ADD CONSTRAINT "ENUM_ITEM_BASES_PK" PRIMARY KEY ("ID") ENABLE;
old   1: ALTER TABLE &&sapp.."ENUM_ITEM_BASES" ADD CONSTRAINT "ENUM_ITEM_BASES_PK" PRIMARY KEY ("ID") ENABLE
new   1: ALTER TABLE CAR_SELL_OWNER."ENUM_ITEM_BASES" ADD CONSTRAINT "ENUM_ITEM_BASES_PK" PRIMARY KEY ("ID") ENABLE

Table altered.

SQL> @ddl/crpk/crpk_MAIN_CATEGORIES_PK.sql
SQL> prompt creating PK for MAIN_CATEGORIES
creating PK for MAIN_CATEGORIES
SQL> 
SQL> ALTER TABLE &&sapp.."MAIN_CATEGORIES" ADD CONSTRAINT "MAIN_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE;
old   1: ALTER TABLE &&sapp.."MAIN_CATEGORIES" ADD CONSTRAINT "MAIN_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE
new   1: ALTER TABLE CAR_SELL_OWNER."MAIN_CATEGORIES" ADD CONSTRAINT "MAIN_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE

Table altered.

SQL> @ddl/crpk/crpk_SUB_CATEGORIES_PK.sql
SQL> prompt creating PK for SUB_CATEGORIES
creating PK for SUB_CATEGORIES
SQL> 
SQL> ALTER TABLE &&sapp.."SUB_CATEGORIES" ADD CONSTRAINT "SUB_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE;
old   1: ALTER TABLE &&sapp.."SUB_CATEGORIES" ADD CONSTRAINT "SUB_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE
new   1: ALTER TABLE CAR_SELL_OWNER."SUB_CATEGORIES" ADD CONSTRAINT "SUB_CATEGORIES_PK" PRIMARY KEY ("ID") ENABLE

Table altered.

SQL> 
SQL> -- -----------------------------------------------
SQL> prompt create foreign keys for tables staging area
create foreign keys for tables staging area
SQL> -- -----------------------------------------------
SQL> 
SQL> @ddl/crfk/crfk_ANNOUNCEMENT_VEHICLE_FK.sql
SQL> ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES &&sapp.."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE;
old   1: ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES &&sapp.."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE
new   1: ALTER TABLE CAR_SELL_OWNER."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES CAR_SELL_OWNER."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE

Table altered.

SQL> ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_SUB_CATEGORY_FK FOREIGN KEY (SUB_CATEGORY_ID) REFERENCES &&sapp.."SUB_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE;
old   1: ALTER TABLE &&sapp.."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_SUB_CATEGORY_FK FOREIGN KEY (SUB_CATEGORY_ID) REFERENCES &&sapp.."SUB_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE
new   1: ALTER TABLE CAR_SELL_OWNER."ANNOUNCEMENT_VEHICLE" ADD CONSTRAINT ANNOUNCEMENT_VEHICLE_SUB_CATEGORY_FK FOREIGN KEY (SUB_CATEGORY_ID) REFERENCES CAR_SELL_OWNER."SUB_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE

Table altered.

SQL> @ddl/crfk/crfk_SUB_CATEGORIES_FK.sql
SQL> ALTER TABLE &&sapp.."SUB_CATEGORIES" ADD CONSTRAINT SUB_CATEGORY_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES &&sapp.."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE;
old   1: ALTER TABLE &&sapp.."SUB_CATEGORIES" ADD CONSTRAINT SUB_CATEGORY_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES &&sapp.."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE
new   1: ALTER TABLE CAR_SELL_OWNER."SUB_CATEGORIES" ADD CONSTRAINT SUB_CATEGORY_MAIN_CATEGORY_FK FOREIGN KEY (MAIN_CATEGORY_ID) REFERENCES CAR_SELL_OWNER."MAIN_CATEGORIES" (ID) ON DELETE SET NULL NOT DEFERRABLE

Table altered.

SQL> 
SQL> -- -----------------------------------------------
SQL> prompt create sequences
create sequences
SQL> -- -----------------------------------------------
SQL> 
SQL> @ddl/crsq/crsq_ANNOUNCEMENT_VEHICLE.sql
SQL> prompt creating SEQ for ANNOUNCEMENT_VEHICLE_SEQ
creating SEQ for ANNOUNCEMENT_VEHICLE_SEQ
SQL> 
SQL> CREATE SEQUENCE  &&sapp.."ANNOUNCEMENT_VEHICLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE	NOORDER  NOCYCLE;
old   1: CREATE SEQUENCE  &&sapp.."ANNOUNCEMENT_VEHICLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE
new   1: CREATE SEQUENCE  CAR_SELL_OWNER."ANNOUNCEMENT_VEHICLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE

Sequence created.

SQL> 
SQL> -- Rolf Krissel, 23.01.2017
SQL> -- -----------------------------------------------
SQL> prompt grants
grants
SQL> -- -----------------------------------------------
SQL> @ddl/crgr/GRANTS_TO_ROLE_RW.sql
SQL> prompt Granting privileges for synonyms to &role_rw
Granting privileges for synonyms to CAR_SELL_OWNER_RW
SQL> 
SQL> GRANT SELECT ON &&sapp..ANNOUNCEMENT_VEHICLE_SEQ TO &role_rw;
old   1: GRANT SELECT ON &&sapp..ANNOUNCEMENT_VEHICLE_SEQ TO &role_rw
new   1: GRANT SELECT ON CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE_SEQ TO CAR_SELL_OWNER_RW

Grant succeeded.

SQL> 
SQL> GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..ANNOUNCEMENT_VEHICLE TO &role_rw;
old   1: GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..ANNOUNCEMENT_VEHICLE TO &role_rw
new   1: GRANT SELECT, INSERT, DELETE, UPDATE ON CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE TO CAR_SELL_OWNER_RW

Grant succeeded.

SQL> GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..ENUM_ITEM_BASES TO &role_rw;
old   1: GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..ENUM_ITEM_BASES TO &role_rw
new   1: GRANT SELECT, INSERT, DELETE, UPDATE ON CAR_SELL_OWNER.ENUM_ITEM_BASES TO CAR_SELL_OWNER_RW

Grant succeeded.

SQL> GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..MAIN_CATEGORIES TO &role_rw;
old   1: GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..MAIN_CATEGORIES TO &role_rw
new   1: GRANT SELECT, INSERT, DELETE, UPDATE ON CAR_SELL_OWNER.MAIN_CATEGORIES TO CAR_SELL_OWNER_RW

Grant succeeded.

SQL> GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..SUB_CATEGORIES TO &role_rw;
old   1: GRANT SELECT, INSERT, DELETE, UPDATE ON &&sapp..SUB_CATEGORIES TO &role_rw
new   1: GRANT SELECT, INSERT, DELETE, UPDATE ON CAR_SELL_OWNER.SUB_CATEGORIES TO CAR_SELL_OWNER_RW

Grant succeeded.

SQL> 
SQL> 
SQL> @ddl/crgr/GRANTS_TO_ROLE_RO.sql
SQL> prompt Granting privileges for synonyms to &role_ro
Granting privileges for synonyms to CAR_SELL_OWNER_RO
SQL> 
SQL> GRANT SELECT ON &&sapp..ANNOUNCEMENT_VEHICLE TO &role_ro;
old   1: GRANT SELECT ON &&sapp..ANNOUNCEMENT_VEHICLE TO &role_ro
new   1: GRANT SELECT ON CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE TO CAR_SELL_OWNER_RO

Grant succeeded.

SQL> GRANT SELECT ON &&sapp..ENUM_ITEM_BASES TO &role_ro;
old   1: GRANT SELECT ON &&sapp..ENUM_ITEM_BASES TO &role_ro
new   1: GRANT SELECT ON CAR_SELL_OWNER.ENUM_ITEM_BASES TO CAR_SELL_OWNER_RO

Grant succeeded.

SQL> GRANT SELECT ON &&sapp..MAIN_CATEGORIES TO &role_ro;
old   1: GRANT SELECT ON &&sapp..MAIN_CATEGORIES TO &role_ro
new   1: GRANT SELECT ON CAR_SELL_OWNER.MAIN_CATEGORIES TO CAR_SELL_OWNER_RO

Grant succeeded.

SQL> GRANT SELECT ON &&sapp..SUB_CATEGORIES TO &role_ro;
old   1: GRANT SELECT ON &&sapp..SUB_CATEGORIES TO &role_ro
new   1: GRANT SELECT ON CAR_SELL_OWNER.SUB_CATEGORIES TO CAR_SELL_OWNER_RO

Grant succeeded.

SQL> 
SQL> -- -----------------------------------------------
SQL> prompt synonym
synonym
SQL> -- -----------------------------------------------
SQL> CONNECT &csusr
Connected.
SQL> @ddl/crsy/crsy_usr_synonyms.sql
SQL> CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE FOR &&sapp..ANNOUNCEMENT_VEHICLE;
old   1: CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE FOR &&sapp..ANNOUNCEMENT_VEHICLE
new   1: CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE FOR CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE

Synonym created.

SQL> CREATE OR REPLACE SYNONYM ENUM_ITEM_BASES FOR &&sapp..ENUM_ITEM_BASES;
old   1: CREATE OR REPLACE SYNONYM ENUM_ITEM_BASES FOR &&sapp..ENUM_ITEM_BASES
new   1: CREATE OR REPLACE SYNONYM ENUM_ITEM_BASES FOR CAR_SELL_OWNER.ENUM_ITEM_BASES

Synonym created.

SQL> CREATE OR REPLACE SYNONYM MAIN_CATEGORIES FOR &&sapp..MAIN_CATEGORIES;
old   1: CREATE OR REPLACE SYNONYM MAIN_CATEGORIES FOR &&sapp..MAIN_CATEGORIES
new   1: CREATE OR REPLACE SYNONYM MAIN_CATEGORIES FOR CAR_SELL_OWNER.MAIN_CATEGORIES

Synonym created.

SQL> CREATE OR REPLACE SYNONYM SUB_CATEGORIES FOR &&sapp..SUB_CATEGORIES;
old   1: CREATE OR REPLACE SYNONYM SUB_CATEGORIES FOR &&sapp..SUB_CATEGORIES
new   1: CREATE OR REPLACE SYNONYM SUB_CATEGORIES FOR CAR_SELL_OWNER.SUB_CATEGORIES

Synonym created.

SQL> 
SQL> CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE_SEQ FOR &&sapp..ANNOUNCEMENT_VEHICLE_SEQ;
old   1: CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE_SEQ FOR &&sapp..ANNOUNCEMENT_VEHICLE_SEQ
new   1: CREATE OR REPLACE SYNONYM ANNOUNCEMENT_VEHICLE_SEQ FOR CAR_SELL_OWNER.ANNOUNCEMENT_VEHICLE_SEQ

Synonym created.

SQL> 
SQL> prompt load data
load data
SQL> -- -----------------------------------------------
SQL> @@dml/ins_MAIN_CATEGORIES.sql
SQL> 
SQL> 
SQL> BEGIN
  2  	 INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(1,'Автомобили и Джипове');
  3  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(2,'Бусове');
  4  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(3,'Камиони');
  5  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(4,'Мотоциклети');
  6  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(5,'Селскостопански');
  7  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(6,'Индустриални');
  8  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(7,'Кари');
  9  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(8,'Каравани');
 10  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(9,'Яхти и Лодки');
 11  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(10,'Ремаркета');
 12  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(11,'Велосипеди');
 13  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(12,'Части');
 14  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(13,'Аксесоари');
 15  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(14,'Гуми и джанти');
 16  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(15,'Купува');
 17  	     INSERT INTO MAIN_CATEGORIES (ID, NAME) VALUES(16,'Услуги');
 18  
 19  	 COMMIT;
 20  EXCEPTION
 21  	 WHEN OTHERS THEN
 22  	   ROLLBACK;
 23  
 24  	   RAISE;
 25  END;
 26  
 27  /

PL/SQL procedure successfully completed.

SQL> @@dml/ins_SUB_CATEGORIES.sql
SQL> 
SQL> 
SQL> BEGIN
  2  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(1,'Ван',1);
  3  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(2,'Джип',1);
  4  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(3,'Кабрио',1);
  5  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(4,'Комби',1);
  6  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(5,'Купе',1);
  7  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(6,'Миниван',1);
  8  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(7,'Пикап',1);
  9  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(8,'Седан',1);
 10  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(9,'Стреч лимузина',1);
 11  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(10,'Хечбек',1);
 12  
 13  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(11,'Бордови',2);
 14  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(12,'Катафалка',2);
 15  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(13,'Линейка',2);
 16  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(14,'Пътнически',2);
 17  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(15,'Самосвал',2);
 18  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(16,'Самосвал с кран',2);
 19  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(17,'Товарен',2);
 20  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(18,'Товаропътнически',2);
 21  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(19,'Фургон',2);
 22  
 23  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(20,'Автовоз',3);
 24  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(21,'Бордови',3);
 25  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(22,'Влекач',3);
 26  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(23,'Кран',3);
 27  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(24,'Мултилифт',3);
 28  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(25,'Самосвал',3);
 29  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(26,'Самосвал с кран',3);
 30  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(27,'Снегорин',3);
 31  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(28,'Фургон',3);
 32  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(29,'Цистерна',3);
 33  
 34  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(30,'ATV',4);
 35  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(31,'Cafe Racer',4);
 36  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(32,'UTV',4);
 37  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(33,'Бъги',4);
 38  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(34,'Ендуро',4);
 39  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(35,'Мото ролер',4);
 40  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(36,'Моторна шейна',4);
 41  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(37,'Кросов',4);
 42  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(38,'Пистов',4);
 43  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(39,'Скутер',4);
 44  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(40,'СуперМото',4);
 45  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(41,'Триколка',4);
 46  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(42,'Турър',4);
 47  	     INSERT INTO SUB_CATEGORIES (ID, NAME, MAIN_CATEGORY_ID) VALUES(43,'Чопър',4);
 48  
 49  	 COMMIT;
 50  EXCEPTION
 51  	 WHEN OTHERS THEN
 52  	   ROLLBACK;
 53  
 54  	   RAISE;
 55  END;
 56  
 57  /

PL/SQL procedure successfully completed.

SQL> @@dml/ins_ENUM_ITEM_BASES.sql
SQL> 
SQL> 
SQL> BEGIN
  2  	     INSERT INTO ENUM_ITEM_BASES (ID, NAME, DISCRIMINATOR) VALUES(1,'35','PeriodType');
  3  	     INSERT INTO ENUM_ITEM_BASES (ID, NAME, DISCRIMINATOR) VALUES(2,'49','PeriodType');
  4  
  5  	 COMMIT;
  6  EXCEPTION
  7  	 WHEN OTHERS THEN
  8  	   ROLLBACK;
  9  
 10  	   RAISE;
 11  END;
 12  
 13  /

PL/SQL procedure successfully completed.

SQL> 
SQL> DISCONNECT
Disconnected from Oracle Database 12c Enterprise Edition Release 12.2.0.1.0 - 64bit Production
SQL> spool off
